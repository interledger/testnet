version: '3.5'

services:
  postgres:
    container_name: postgres
    image: 'postgres:15'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - '5433:5432'
    restart: unless-stopped
    networks:
      - testnet
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ../dbinit.sql:/docker-entrypoint-initdb.d/init.sql

  # Wallet
  wallet-backend:
    container_name: wallet-backend
    build:
      context: ../..
      dockerfile: ./packages/wallet/backend/Dockerfile.dev
    depends_on:
      - postgres
      - rafiki-backend
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgres://wallet_backend:wallet_backend@postgres/wallet_backend
      COOKIE_NAME: testnet.cookie
      COOKIE_PASSWORD: testnet.cookie.password.super.secret.ilp
      COOKIE_TTL: 2630000
      RAPYD_API: https://sandboxapi.rapyd.net/v1
      RAPYD_ACCESS_KEY: ${RAPYD_ACCESS_KEY}
      RAPYD_SETTLEMENT_EWALLET: ${RAPYD_SETTLEMENT_EWALLET}
      RAPYD_SECRET_KEY: ${RAPYD_SECRET_KEY}
      OPEN_PAYMENTS_HOST: https://rafiki-backend
      GRAPHQL_ENDPOINT: http://rafiki-backend:3001/graphql
      AUTH_GRAPHQL_ENDPOINT: http://rafiki-auth:3008/graphql
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      FROM_EMAIL: ${FROM_EMAIL}
      SEND_EMAIL: ${SEND_EMAIL}
    restart: always
    networks:
      - testnet
    ports:
      - '3003:3003'
      - '9229:9229' # Map debugger port to local machine's port 9229

  # Commerce
  commerce-backend:
    container_name: commerce-backend
    build:
      context: ../..
      dockerfile: ./packages/commerce/backend/Dockerfile.dev
    depends_on:
      - postgres
    environment:
      NODE_ENV: development
      PORT: 3004
      DATABASE_URL: postgres://commerce_backend:commerce_backend@postgres/commerce_backend
    restart: always
    networks:
      - testnet
    ports:
      - '3004:3004'

  # Rafiki
  rafiki-auth:
    container_name: rafiki-auth
    image: ghcr.io/interledger/rafiki-auth:main@sha256:968f5c11739785e84b29c029a54c4c328ea9449cfe6d8d13d1c3e1a2be3f865a
    restart: always
    networks:
      - testnet
    ports:
      - '3006:3006'
      - '3008:3008'
    environment:
      PORT: 3006
      INTROSPECTION_PORT: 3007
      ADMIN_PORT: 3008
      NODE_ENV: development
      AUTH_DATABASE_URL: postgresql://rafiki_auth:rafiki_auth@postgres/rafiki_auth
    depends_on:
      - postgres

  rafiki-backend:
    container_name: rafiki-backend
    image: ghcr.io/interledger/rafiki-backend:main@sha256:7b8be04015943241adfef27a3dae1476018139d718441ac75656728e5cfec528
    restart: always
    privileged: true
    volumes:
      - ../temp/:/workspace/temp/
    ports:
      - '3010:80'
      - '3011:3001'
    networks:
      - testnet
    environment:
      NODE_ENV: development
      PRIVATE_KEY_FILE: ./temp/private-key.pem
      LOG_LEVEL: debug
      ADMIN_PORT: 3001
      CONNECTOR_PORT: 3002
      OPEN_PAYMENTS_PORT: 80
      DATABASE_URL: postgresql://rafiki_backend:rafiki_backend@postgres/rafiki_backend
      USE_TIGERBEETLE: true
      TIGERBEETLE_CLUSTER_ID: 0
      TIGERBEETLE_REPLICA_ADDRESSES: 10.5.0.50:4342
      NONCE_REDIS_KEY: test
      AUTH_SERVER_GRANT_URL: http://rafiki-auth:3006
      AUTH_SERVER_INTROSPECTION_URL: http://rafiki-auth:3007
      ILP_ADDRESS: test.net
      STREAM_SECRET: BjPXtnd00G2mRQwP/8ZpwyZASOch5sUXT5o0iR5b5wU=
      ADMIN_KEY: admin
      PUBLIC_HOST: http://rafiki-backend
      OPEN_PAYMENTS_URL: http://rafiki-backend
      REDIS_URL: redis://redis:6379/0
      PAYMENT_POINTER_URL: https://rafiki-backend/.well-known/pay
      # Testnet urls - not implemented
      WEBHOOK_URL: http://wallet-backend:3003/webhooks
      WEBHOOK_TIMEOUT: 60000
      EXCHANGE_RATES_URL: http://wallet-backend:3003/rates
      QUOTE_URL: http://wallet-backend:3003/quote
    depends_on:
      - postgres
      - redis

  rafiki-frontend:
    container_name: rafiki-frontend
    image: ghcr.io/interledger/rafiki-frontend:main@sha256:78af50f6c1f603a01d9b3896098ed1766d9085d6fbe654c5697ce6233204f590
    depends_on:
      - rafiki-backend
    restart: always
    privileged: true
    ports:
      - '3012:3012'
    networks:
      - testnet
    environment:
      PORT: 3012
      GRAPHQL_URL: http://rafiki-backend:3001/graphql
      OPEN_PAYMENTS_URL: https://rafiki-backend/

  tigerbeetle:
    image: ghcr.io/tigerbeetle/tigerbeetle:0.13.57
    privileged: true
    volumes:
      - tigerbeetle-data:/var/lib/tigerbeetle
    networks:
      testnet:
        ipv4_address: 10.5.0.50
    entrypoint:
      - /bin/sh
      - -c
      - |
        set -ex
        DATA_FILE=/var/lib/tigerbeetle/cluster_0_replica_0.tigerbeetle
        set +e
        ls $$DATA_FILE
        DATA_FILE_EXISTS="$$?"
        set -e
        echo $$DATA_FILE_EXISTS
        if [ "$$DATA_FILE_EXISTS" != 0 ]; then 
          ./tigerbeetle format --cluster=0 --replica=0 --replica-count=1 $$DATA_FILE; 
        fi
        hostname -i
        ls /var/lib/tigerbeetle
        ./tigerbeetle start --addresses=0.0.0.0:4342 $$DATA_FILE

  rafiki-local-http-signatures:
    build:
      context: ../../
      dockerfile: ./docker/dev/local-http-signatures/Dockerfile
    volumes:
      - ../temp/:/workspace/temp/
    restart: always
    ports:
      - '3040:3000'
    environment:
      KEY_FILE: ./temp/private-key.pem

  redis:
    image: 'redis:7'
    restart: unless-stopped
    networks:
      - testnet

networks:
  testnet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1

volumes:
  pg-data:
  tigerbeetle-data: # named volumes can be managed easier using docker-compose
