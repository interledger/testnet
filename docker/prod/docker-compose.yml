version: '3.8'
name: 'testnet'

services:
  postgres:
    image: 'postgres:15'
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - testnet
    restart: unless-stopped
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ../dbinit.sql:/docker-entrypoint-initdb.d/init.sql

  wallet-frontend:
    hostname: wallet-frontend
    build:
      context: ../..
      dockerfile: ./packages/wallet/frontend/Dockerfile.prod
      args:
        PORT: ${WALLET_FRONTEND_PORT}
        NEXT_PUBLIC_USE_TEST_KYC_DATA: ${WALLET_FRONTEND_USE_TEST_KYC_DATA}
        NEXT_PUBLIC_BACKEND_URL: ${WALLET_FRONTEND_BACKEND_URL}
        NEXT_PUBLIC_OPEN_PAYMENTS_HOST: ${WALLET_FRONTEND_OPEN_PAYMENTS_HOST}
    container_name: wallet-frontend
    ports:
      - '${WALLET_FRONTEND_PORT}:${WALLET_FRONTEND_PORT}'
    restart: always

  # Testnet
  wallet-backend:
    build:
      context: ../..
      dockerfile: ./packages/wallet/backend/Dockerfile.prod
    container_name: wallet-backend
    depends_on:
      - postgres
      - rafiki-backend
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${WALLET_BACKEND_PORT}
      DATABASE_URL: ${WALLET_BACKEND_DATABASE_URL}
      COOKIE_NAME: ${WALLET_BACKEND_COOKIE_NAME}
      COOKIE_PASSWORD: ${WALLET_BACKEND_COOKIE_PASSWORD}
      COOKIE_TTL: ${WALLET_BACKEND_COOKIE_TTL}
      RAPYD_API: ${WALLET_BACKEND_RAPYD_API}
      RAPYD_ACCESS_KEY: ${WALLET_BACKEND_RAPYD_ACCESS_KEY}
      RAPYD_SETTLEMENT_EWALLET: ${WALLET_BACKEND_RAPYD_SETTLEMENT_EWALLET}
      RAPYD_SECRET_KEY: ${WALLET_BACKEND_RAPYD_SECRET_KEY}
      OPEN_PAYMENTS_HOST: ${WALLET_BACKEND_OPEN_PAYMENTS_HOST}
      GRAPHQL_ENDPOINT: ${WALLET_BACKEND_GRAPHQL_ENDPOINT}
      RAFIKI_MONEY_FRONTEND_HOST: ${WALLET_BACKEND_RAFIKI_MONEY_FRONTEND_HOST}
    networks:
      - testnet
    ports:
      - '${WALLET_BACKEND_PORT}:${WALLET_BACKEND_PORT}'
    restart: always

  rafiki-auth:
    image: ghcr.io/interledger/rafiki-auth:main
    container_name: rafiki-auth
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${RAFIKI_AUTH_PORT}
      ADMIN_PORT: ${RAFIKI_AUTH_ADMIN_PORT}
      INTROSPECTION_PORT: ${RAFIKI_AUTH_INTROSPECTION_PORT}
      AUTH_DATABASE_URL: ${RAFIKI_AUTH_DATABASE_URL}
    depends_on:
      - postgres
    networks:
      - testnet
    ports:
      - '${RAFIKI_AUTH_PORT}:${RAFIKI_AUTH_PORT}'
      - '${RAFIKI_AUTH_ADMIN_PORT}:${RAFIKI_AUTH_ADMIN_PORT}'
    restart: always

  rafiki-backend:
    image: ghcr.io/interledger/rafiki-backend:main
    container_name: rafiki-backend
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: ${NODE_ENV}
      PRIVATE_KEY_FILE: ${RAFIKI_BACKEND_PRIVATE_KEY_FILE}
      LOG_LEVEL: ${RAFIKI_BACKEND_LOG_LEVEL}
      ADMIN_PORT: ${RAFIKI_BACKEND_ADMIN_PORT}
      CONNECTOR_PORT: ${RAFIKI_BACKEND_CONNECTOR_PORT}
      OPEN_PAYMENTS_PORT: ${RAFIKI_BACKEND_OPEN_PAYMENTS_PORT}
      DATABASE_URL: ${RAFIKI_BACKEND_DATABASE_URL}
      USE_TIGERBEETLE: ${RAFIKI_BACKEND_USE_TIGERBEETLE}
      TIGERBEETLE_CLUSTER_ID: ${RAFIKI_BACKEND_TIGERBEETLE_CLUSTER_ID}
      TIGERBEETLE_REPLICA_ADDRESSES: ${RAFIKI_BACKEND_TIGERBEETLE_REPLICA_ADDRESSES}
      NONCE_REDIS_KEY: ${RAFIKI_BACKEND_NONCE_REDIS_KEY}
      AUTH_SERVER_GRANT_URL: ${RAFIKI_BACKEND_AUTH_SERVER_GRANT_URL}
      AUTH_SERVER_INTROSPECTION_URL: ${RAFIKI_BACKEND_AUTH_SERVER_INTROSPECTION_URL}
      ILP_ADDRESS: ${RAFIKI_BACKEND_ILP_ADDRESS}
      STREAM_SECRET: ${RAFIKI_BACKEND_STREAM_SECRET}
      ADMIN_KEY: ${RAFIKI_BACKEND_ADMIN_KEY}
      PUBLIC_HOST: ${RAFIKI_BACKEND_PUBLIC_HOST}
      OPEN_PAYMENTS_URL: ${RAFIKI_BACKEND_OPEN_PAYMENTS_URL}
      REDIS_URL: ${RAFIKI_BACKEND_REDIS_URL}
      PAYMENT_POINTER_URL: ${RAFIKI_BACKEND_PAYMENT_POINTER_URL}
      WEBHOOK_URL: ${RAFIKI_BACKEND_WEBHOOK_URL}
      WEBHOOK_TIMEOUT: ${RAFIKI_BACKEND_WEBHOOK_TIMEOUT}
      EXCHANGE_RATES_URL: ${RAFIKI_BACKEND_EXCHANGE_RATES_URL}
      QUOTE_URL: ${RAFIKI_BACKEND_QUOTE_URL}
    networks:
      - testnet
    ports:
      - '3010:80'
      - '3011:3001'
    privileged: true
    restart: always
    volumes:
      - ../temp/:/workspace/temp/

  rafiki-frontend:
    image: ghcr.io/interledger/rafiki-frontend:v1.0.0-alpha.1
    container_name: rafiki-frontend
    depends_on:
      - rafiki-backend
    environment:
      PORT: ${RAFIKI_FRONTEND_PORT}
      GRAPHQL_URL: ${RAFIKI_FRONTEND_GRAPHQL_URL}
    networks:
      - testnet
    restart: always
    privileged: true
    ports:
      - '${RAFIKI_FRONTEND_PORT}:${RAFIKI_FRONTEND_PORT}'

  redis:
    image: 'redis:7'
    restart: unless-stopped
    networks:
      - testnet

networks:
  testnet:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1

volumes:
  pg-data:
