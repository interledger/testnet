FROM node:18-bullseye-slim as base

WORKDIR /testnet

RUN apt-get update && \
    apt-get install -y python3 build-essential && \
    apt-get clean

RUN corepack enable
RUN corepack prepare pnpm@8.6.2 --activate

FROM base AS deps 

WORKDIR /testnet

ADD package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc .nvmrc ./
ADD packages/wallet/frontend/package.json ./packages/wallet/frontend/package.json
RUN --mount=type=cache,id=pnpm-store,target=/home/testnet/.pnpm-store \
    pnpm fetch
RUN pnpm install --frozen-lockfile


FROM base AS prod-deps

WORKDIR /testnet

ADD package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc .nvmrc ./
ADD packages/wallet/frontend/package.json ./packages/wallet/frontend/package.json
COPY --from=deps /testnet/node_modules /testnet/node_modules
COPY --from=deps /testnet/packages/wallet/frontend/node_modules /testnet/packages/wallet/frontend/node_modules
RUN pnpm prune --prod

FROM base AS builder

WORKDIR /testnet

ADD package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc .nvmrc ./
ADD .eslintrc.js tsconfig.base.json ./
ADD packages/wallet/frontend/package.json ./packages/wallet/frontend/package.json
ADD packages/wallet/frontend/ ./packages/wallet/frontend/
COPY --from=deps /testnet/node_modules /testnet/node_modules
COPY --from=deps /testnet/packages/wallet/frontend/node_modules /testnet/packages/wallet/frontend/node_modules
RUN ls -l /testnet/packages/wallet/frontend
RUN pnpm wallet:frontend build

FROM base

ARG PORT


ENV PORT=$PORT

WORKDIR /testnet

ADD package.json pnpm-lock.yaml pnpm-workspace.yaml .npmrc .nvmrc ./
ADD packages/wallet/frontend/package.json ./packages/wallet/frontend/package.json
COPY --from=prod-deps /testnet/node_modules /testnet/node_modules
COPY --from=prod-deps /testnet/packages/wallet/frontend/node_modules /testnet/packages/wallet/frontend/node_modules
COPY --from=builder /testnet/packages/wallet/frontend/.next /testnet/packages/wallet/frontend/.next

CMD ["pnpm", "wallet:frontend", "start", "-p", "${PORT}"]
